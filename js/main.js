const basePath = '/'; 

/**
 * Kh·ªüi t·∫°o ·ª©ng d·ª•ng khi trang load xong
 */
document.addEventListener('DOMContentLoaded', function () {
    initApp();
});

function initApp() {
    loadData(); // Ki·ªÉm tra v√† load d·ªØ li·ªáu t·ª´ mock-data n·∫øu c·∫ßn
    loadHeader(); // Render header v√†o ph·∫ßn t·ª≠ c√≥ id="main-header"
    loadFooter(); // Render footer v√†o ph·∫ßn t·ª≠ c√≥ id="main-footer"
    renderFeaturedProducts();
    renderCategories();
}

/*
 * Ki·ªÉm tra localStorage, n·∫øu kh√¥ng c√≥ th√¨ copy t·ª´ mock-data
 */
function loadData() {
    if (!localStorage.getItem('products')) {
        localStorage.setItem('products', JSON.stringify(window.MOCK_PRODUCTS));
    }
    if (!localStorage.getItem('categories')) {
        localStorage.setItem('categories', JSON.stringify(window.MOCK_CATEGORIES));
    }
    if (!localStorage.getItem('users')) {
        localStorage.setItem('users', JSON.stringify(window.MOCK_USERS));
    }
    if (!localStorage.getItem('addresses')) {
        localStorage.setItem('addresses', JSON.stringify(window.MOCK_ADDRESSES));
    }
    if (!localStorage.getItem('orders')) {
        localStorage.setItem('orders', JSON.stringify(window.MOCK_ORDERS));
    }
    // Kh·ªüi t·∫°o gi·ªè h√†ng n·∫øu ch∆∞a c√≥
    if (!localStorage.getItem('cart')) {
        localStorage.setItem('cart', JSON.stringify([]));
    }
}


/**
 * Render Header (d√πng chung cho nhi·ªÅu trang)
 */
function loadHeader() {
    const header = document.getElementById('main-header');
    if (!header) {
        console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ header v·ªõi id='main-header'");
        return;
    }

    const currentUserJson = localStorage.getItem('currentUser');
    let navLinks = '';

    if (currentUserJson) {
        try {
            const currentUser = JSON.parse(currentUserJson);
            if (currentUser && currentUser.name) {
                // T√≠nh s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng cho ng∆∞·ªùi d√πng hi·ªán t·∫°i
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                const userCartItems = cart.filter(item => item.userId == currentUser.id);
                const cartCount = userCartItems.length;
                const cartText = cartCount > 0 ? `Gi·ªè h√†ng (${cartCount})` : 'Gi·ªè h√†ng';

                // --- S·ª≠ d·ª•ng basePath ---
                navLinks = `
                    <a href="${basePath}index.html" class="nav-link">Trang ch·ªß</a>
                    <a href="${basePath}product-list/product-list.html" class="nav-link">S·∫£n ph·∫©m</a>
                    <a href="${basePath}contact.html" class="nav-link">Li√™n h·ªá</a>
                    <a href="${basePath}account.html" class="nav-link">T√†i kho·∫£n c·ªßa t√¥i (${currentUser.name})</a>
                    <a href="#" id="logout-link" class="nav-link">ƒêƒÉng xu·∫•t</a>
                    <a href="${basePath}cart.html" class="nav-link">${cartText}</a>
                `;
            } else {
                throw new Error("D·ªØ li·ªáu ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá");
            }
        } catch (e) {
            console.error("L·ªói khi ph√¢n t√≠ch d·ªØ li·ªáu ng∆∞·ªùi d√πng:", e);
            localStorage.removeItem('currentUser');
            navLinks = getGuestNavLinks();
        }
    } else {
        navLinks = getGuestNavLinks();
    }

    // --- C·∫≠p nh·∫≠t HTML n·ªôi dung header ƒë·ªÉ ph√π h·ª£p v·ªõi style.css ---
    header.innerHTML = `
        <div class="container">
          <div class="header-content">
            <div class="logo">
              <a href="${basePath}index.html" style="text-decoration: none; color: inherit;"><span>PharmaHub</span></a>
            </div>
            <div class="search-bar">
              <input type="text" id="search-input" placeholder="T√¨m ki·∫øm t√™n thu·ªëc...">
              <button id="search-btn" type="submit" title="T√¨m ki·∫øm">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <circle cx="11" cy="11" r="8" stroke="currentColor" stroke-width="2"/>
                  <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2"/>
                </svg>
              </button>
            </div>
            <nav class="nav-menu">
              ${navLinks}
              <div class="cart">
                <span class="cart-count" id="header-cart-count">0</span> <!-- Placeholder, s·∫Ω c·∫≠p nh·∫≠t sau -->
              </div>
            </nav>
          </div>
        </div>
    `;

    // G·∫Øn s·ª± ki·ªán cho n√∫t ƒëƒÉng xu·∫•t n·∫øu c√≥
    if (currentUserJson) {
        const logoutLink = document.getElementById('logout-link');
        if (logoutLink) {
             // NgƒÉn ch·∫∑n h√†nh vi m·∫∑c ƒë·ªãnh c·ªßa li√™n k·∫øt
            logoutLink.addEventListener('click', function(e) {
                 e.preventDefault();
                 if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t?')) {
                     localStorage.removeItem('currentUser');
                     alert('ƒêƒÉng xu·∫•t th√†nh c√¥ng!');
                     location.reload(); // Reload trang ƒë·ªÉ c·∫≠p nh·∫≠t header
                 }
            });
        }
    }

    // G·∫Øn s·ª± ki·ªán cho t√¨m ki·∫øm (c√≥ th·ªÉ ph√°t tri·ªÉn sau)
    const searchBtn = document.getElementById('search-btn');
    const searchInput = document.getElementById('search-input');
    if (searchBtn && searchInput) {
        searchBtn.addEventListener('click', function() {
            const query = searchInput.value.trim();
            if (query) {
                 alert('T√¨m ki·∫øm cho: ' + query); // Placeholder cho ch·ª©c nƒÉng t√¨m ki·∫øm
                 // TODO: Th·ª±c hi·ªán t√¨m ki·∫øm ho·∫∑c chuy·ªÉn h∆∞·ªõng
                 // window.location.href = `${basePath}product-list/product-list.html?search=${encodeURIComponent(query)}`;
            }
        });

        // Cho ph√©p nh·∫•n Enter ƒë·ªÉ t√¨m ki·∫øm
        searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchBtn.click();
            }
        });
    }

    // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng tr√™n icon header
    updateHeaderCartCount();
}

// H√†m ti·ªán √≠ch ƒë·ªÉ l·∫•y li√™n k·∫øt cho kh√°ch
// --- C·∫≠p nh·∫≠t ƒë·ªÉ s·ª≠ d·ª•ng basePath ---
function getGuestNavLinks() {
    return `
        <a href="${basePath}index.html" class="nav-link">Trang ch·ªß</a>
        <a href="${basePath}product-list/product-list.html" class="nav-link">S·∫£n ph·∫©m</a>
        <a href="${basePath}contact.html" class="nav-link">Li√™n h·ªá</a>
        <a href="${basePath}product-list/product-list.html" class="nav-link">S·∫£n ph·∫©m</a>
        <a href="${basePath}login.html" class="nav-link">ƒêƒÉng nh·∫≠p</a>
        <a href="${basePath}register.html" class="nav-link register">ƒêƒÉng k√Ω</a>
        <a href="${basePath}cart.html" class="nav-link">Gi·ªè h√†ng</a>
    `;
}


/**
 * Render Footer (d√πng chung cho nhi·ªÅu trang)
 * C·∫≠p nh·∫≠t ƒë·ªÉ render v√†o ph·∫ßn t·ª≠ c√≥ id="main-footer"
 */
function loadFooter() {
    const footer = document.getElementById('main-footer'); // Thay ƒë·ªïi target
    if (!footer) {
        console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ footer v·ªõi id='main-footer'");
        return;
    }

    // --- C·∫≠p nh·∫≠t HTML n·ªôi dung footer ƒë·ªÉ ph√π h·ª£p v·ªõi style.css ---
    footer.innerHTML = `
        <div class="container">
          <div class="footer-content">
            <div class="footer-section">
              <div class="footer-logo">
                <span>PharmaHub</span>
              </div>
              <p>Nh√† thu·ªëc tr·ª±c tuy·∫øn uy t√≠n, cung c·∫•p thu·ªëc ch·∫•t l∆∞·ª£ng cao v√† d·ªãch v·ª• t∆∞ v·∫•n chuy√™n nghi·ªáp.</p>
            </div>
            <div class="footer-section">
              <h3>Li√™n k·∫øt nhanh</h3>
              <ul>
                <li><a href="#">V·ªÅ ch√∫ng t√¥i</a></li>
                <li><a href="#">Ch√≠nh s√°ch b·∫£o m·∫≠t</a></li>
                <li><a href="#">ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</a></li>
                <li><a href="#">H∆∞·ªõng d·∫´n mua h√†ng</a></li>
              </ul>
            </div>
            <div class="footer-section">
              <h3>Th√¥ng tin li√™n h·ªá</h3>
              <ul>
                <li>üìû Hotline: 1900 1234</li>
                <li>üìß Email: info@pharmahub.vn</li>
                <li>üìç ƒê·ªãa ch·ªâ: 123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM</li>
                <li>üïí Gi·ªù l√†m vi·ªác: 5:00 ~ 22:00 m·ªói ng√†y</li>
              </ul>
            </div>
          </div>
          <div class="footer-bottom">
            <p>&copy; 2025 PharmaHub. All rights reserved.</p>
          </div>
        </div>
    `;
}

/**
 * Render s·∫£n ph·∫©m n·ªïi b·∫≠t
 */
function renderFeaturedProducts() {
    const productsContainer = document.getElementById('featured-products');
    if (!productsContainer) {
        console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ v·ªõi id='featured-products'");
        return;
    }

    let products = [];
    try {
        products = JSON.parse(localStorage.getItem('products')) || [];
    } catch (e) {
        console.error("L·ªói khi l·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m t·ª´ localStorage:", e);
        products = [];
    }

    // L·∫•y 4 s·∫£n ph·∫©m ƒë·∫ßu ti√™n l√†m s·∫£n ph·∫©m n·ªïi b·∫≠t
    const featuredProducts = products.slice(0, 4);

    if (featuredProducts.length === 0) {
        productsContainer.innerHTML = '<p>Kh√¥ng c√≥ s·∫£n ph·∫©m n·ªïi b·∫≠t.</p>';
        return;
    }

    let productHTML = '';
    featuredProducts.forEach(product => {
        // Gi·∫£ s·ª≠ l·∫•y gi√° t·ª´ ƒë∆°n v·ªã ƒë·∫ßu ti√™n, ho·∫∑c gi√° th·∫•p nh·∫•t n·∫øu c√≥ nhi·ªÅu ƒë∆°n v·ªã
        let priceDisplay = 'Li√™n h·ªá';
        if (product.units && product.units.length > 0) {
             // T√¨m gi√° th·∫•p nh·∫•t trong c√°c ƒë∆°n v·ªã
            const prices = product.units.map(unit => unit.price).filter(price => !isNaN(price));
            if (prices.length > 0) {
                const minPrice = Math.min(...prices);
                priceDisplay = formatCurrency(minPrice);
            }
        }

        // X·ª≠ l√Ω badge (gi·∫£ s·ª≠ c√≥ tr∆∞·ªùng isBestSeller ho·∫∑c discount)
        let badgeHTML = '';
        // N·∫øu c√≥ tr∆∞·ªùng discount > 0
        if (product.discount && product.discount > 0) {
             badgeHTML = `<div class="product-badge sale">-${product.discount}%</div>`;
        } else if (product.isBestSeller) { // Gi·∫£ s·ª≠ c√≥ tr∆∞·ªùng isBestSeller
             badgeHTML = `<div class="product-badge bestseller">B√°n ch·∫°y</div>`;
        }

        // --- S·ª≠ d·ª•ng basePath cho li√™n k·∫øt chi ti·∫øt s·∫£n ph·∫©m ---
        productHTML += `
            <div class="product-card">
                ${badgeHTML} <!-- Ch√®n badge n·∫øu c√≥ -->
                <img src="${product.image}" alt="${product.name}">
                <h3>${product.name}</h3>
                <p>${product.description}</p>
                <div class="price">
                    <span class="current-price">${priceDisplay}</span>
                    <!-- Hi·ªÉn th·ªã gi√° c≈© n·∫øu c√≥ -->
                    ${product.originalPrice ? `<span class="old-price">${formatCurrency(product.originalPrice)}</span>` : ''}
                </div>
                <a href="${basePath}product-detail/product-detail.html?id=${product.id}" class="btn btn-primary">Xem chi ti·∫øt</a>
            </div>
        `;
    });
    productsContainer.innerHTML = productHTML;
}


/**
 * Render danh m·ª•c s·∫£n ph·∫©m
 */
function renderCategories() {
    const categoriesContainer = document.getElementById('categories');
     if (!categoriesContainer) {
        console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ v·ªõi id='categories'");
        return;
    }

    let categories = [];
    try {
        categories = JSON.parse(localStorage.getItem('categories')) || [];
    } catch (e) {
        console.error("L·ªói khi l·∫•y d·ªØ li·ªáu danh m·ª•c t·ª´ localStorage:", e);
        categories = [];
    }


    if (categories.length === 0) {
        categoriesContainer.innerHTML = '<p>Kh√¥ng c√≥ danh m·ª•c s·∫£n ph·∫©m.</p>';
        return;
    }

    let categoryHTML = '';
    const colors = ['blue', 'green', 'orange', 'purple', 'pink', 'yellow']; // Danh s√°ch m√†u t·ª´ CSS

    categories.forEach((category, index) => {
        const colorClass = colors[index % colors.length]; // Lu√¢n phi√™n m√†u

        // --- S·ª≠ d·ª•ng basePath cho li√™n k·∫øt danh m·ª•c ---
        categoryHTML += `
            <div class="category-card">
                <div class="category-icon ${colorClass}">
                </div>
                <h3>${category.name}</h3>
                <p>${category.description || 'Kh√°m ph√° c√°c s·∫£n ph·∫©m trong danh m·ª•c n√†y.'}</p>
                <a href="${basePath}product-list/product-list.html?category=${encodeURIComponent(category.name)}" class="category-link">Xem t·∫•t c·∫£</a>
            </div>
        `;
    });
    categoriesContainer.innerHTML = categoryHTML;
}

/**
 * H√†m ti·ªán √≠ch: ƒê·ªãnh d·∫°ng ti·ªÅn t·ªá
 */
function formatCurrency(amount) {
    // Ki·ªÉm tra ƒë·∫ßu v√†o h·ª£p l·ªá
    if (typeof amount !== 'number' || isNaN(amount)) {
        return 'Li√™n h·ªá';
    }
    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);
}

/**
 * H√†m ti·ªán √≠ch: C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng hi·ªÉn th·ªã tr√™n header
 */
function updateHeaderCartCount() {
    const cartCountElement = document.getElementById('header-cart-count');
    if (!cartCountElement) return;

    let count = 0;
    const currentUserJson = localStorage.getItem('currentUser');
    if (currentUserJson) {
        try {
            const currentUser = JSON.parse(currentUserJson);
            if (currentUser && currentUser.id) {
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                const userCartItems = cart.filter(item => item.userId == currentUser.id);
                count = userCartItems.reduce((total, item) => total + (item.quantity || 1), 0); // T√≠nh t·ªïng s·ªë l∆∞·ª£ng
            }
        } catch (e) {
            console.error("L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng header:", e);
        }
    }
    cartCountElement.textContent = count > 0 ? count : '0'; // Hi·ªÉn th·ªã 0 n·∫øu kh√¥ng c√≥ item
    // ·∫®n/hi·ªán badge n·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m (t√πy ch·ªçn)
    cartCountElement.style.display = count > 0 ? 'flex' : 'none';
}